{"remainingRequest":"/Users/lvjing/web-project/front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/front/src/views/base/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/front/src/views/base/index.vue","mtime":1653905842624},{"path":"/Users/lvjing/web-project/front/babel.config.js","mtime":1652685204336},{"path":"/Users/lvjing/web-project/front/node_modules/cache-loader/dist/cjs.js","mtime":1652685773640},{"path":"/Users/lvjing/web-project/front/node_modules/babel-loader/lib/index.js","mtime":1652685774572},{"path":"/Users/lvjing/web-project/front/node_modules/cache-loader/dist/cjs.js","mtime":1652685773640},{"path":"/Users/lvjing/web-project/front/node_modules/vue-loader/lib/index.js","mtime":1652685774920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9sdmppbmcvd2ViLXByb2plY3QvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZGF0YVRweWVMaXN0LCBnZXRCYXNlRGF0YSwgZ2V0U2NlbmVEYXRhIH0gZnJvbSAnQC9hcGkvZGF0YXMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFCYXNlVHlwZU9wdGlvbjogW10sCiAgICAgIGRhdGFCYXNlU2NlbmVPcHRpb246IFtdLAogICAgICBnZXRCYXNlRGF0YTogJycsCiAgICAgIGdldFNjZW5lRGF0YTogJycsCiAgICAgIGRhdGFCYXNlRm9ybTogewogICAgICAgICdkYXRhTmFtZSc6ICcnCiAgICAgIH0sCiAgICAgIGRhdGFTY2VuZUZvcm06IHsKICAgICAgICAnc2NlbmVOYW1lJzogJycKICAgICAgfSwKICAgICAgcmVxOiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBzaXplOiA2CiAgICAgIH0sCiAgICAgIC8vIOWIhumhtemhteaVsAogICAgICB0b3RhbDogMTAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0RGF0YVR5cGVMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vmlbDmja7nsbvlnovliJfooagKICAgIGluaXREYXRhVHlwZUxpc3Q6IGZ1bmN0aW9uIGluaXREYXRhVHlwZUxpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwLCBpOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFUcHllTGlzdChfdGhpcy5yZXEpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCByZXNwLml0ZW1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3AuaXRlbXNbaV0uZGF0YV90eXBlID09PSAnYmFzZScpIHsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmRhdGFCYXNlVHlwZU9wdGlvbi5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHJlc3AuaXRlbXNbaV0uZGF0YV9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogcmVzcC5pdGVtc1tpXS5kYXRhX2NoCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3AuaXRlbXNbaV0uZGF0YV90eXBlID09PSAnc2NlbmUnKSB7CiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5kYXRhQmFzZVNjZW5lT3B0aW9uLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcmVzcC5pdGVtc1tpXS5kYXRhX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiByZXNwLml0ZW1zW2ldLmRhdGFfY2gKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSAvLyB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuafpeivouaIkOWKn++8gSIpCgogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+afpeivouWksei0pe+8gScpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0QmFzZURhdGFJbmZvOiBmdW5jdGlvbiBnZXRCYXNlRGF0YUluZm8oZGF0YUZvcm0pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzcDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldEJhc2VEYXRhKGRhdGFGb3JtKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXNwLnN1Y2Nlc3MgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmdldEJhc2VEYXRhID0gSlNPTi5zdHJpbmdpZnkocmVzcC5yZXN1bHQsIG51bGwsIDIpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRTY2VuZURhdGFJbmZvOiBmdW5jdGlvbiBnZXRTY2VuZURhdGFJbmZvKGRhdGFGb3JtKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3A7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRTY2VuZURhdGEoZGF0YUZvcm0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlc3Auc3VjY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgICBfdGhpczMuZ2V0U2NlbmVEYXRhID0gSlNPTi5zdHJpbmdpZnkocmVzcC5yZXN1bHQsIG51bGwsIDIpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDpgInkuK3pgInpobnvvIznlJ/miJDlr7nlupTnmoTmlbDmja4KICAgIGNoYW5nZUJhc2VEYXRhOiBmdW5jdGlvbiBjaGFuZ2VCYXNlRGF0YSgpIHsKICAgICAgdGhpcy5nZXRCYXNlRGF0YUluZm8odGhpcy5kYXRhQmFzZUZvcm0pOwogICAgfSwKICAgIGNoYW5nZVNjZW5lRGF0YTogZnVuY3Rpb24gY2hhbmdlU2NlbmVEYXRhKCkgewogICAgICB0aGlzLmdldFNjZW5lRGF0YUluZm8odGhpcy5kYXRhU2NlbmVGb3JtKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,sBADA;MAEAC,uBAFA;MAGAC,eAHA;MAIAC,gBAJA;MAKAC;QACA;MADA,CALA;MAQAC;QACA;MADA,CARA;MAWAC;QACAC,OADA;QAEAC;MAFA,CAXA;MAeA;MACAC;IAhBA;EAkBA,CApBA;EAqBAC,OArBA,qBAqBA;IACA;EACA,CAvBA;EAwBAC;IACA;IACAC,gBAFA,8BAEA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,uBADA;;cAAA;gBACAC,IADA;;gBAEA;kBACA;oBACA;sBACA;wBACAC,8BADA;wBAEAC;sBAFA;oBAIA,CALA,MAKA;sBACA;wBACAD,8BADA;wBAEAC;sBAFA;oBAIA;kBACA,CAbA,CAcA;;gBACA,CAfA,MAeA;kBACA;gBACA;;cAnBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAoBA,CAtBA;IAuBAC,eAvBA,2BAuBAC,QAvBA,EAuBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAhB,qBADA;;cAAA;gBACAY,IADA;;gBAEA;kBACA;gBACA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CA5BA;IA6BAK,gBA7BA,4BA6BAD,QA7BA,EA6BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAf,sBADA;;cAAA;gBACAW,IADA;;gBAEA;kBACA;gBACA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAKA,CAlCA;IAmCA;IACAM,cApCA,4BAoCA;MACA;IACA,CAtCA;IAuCAC,eAvCA,6BAuCA;MACA;IACA;EAzCA;AAxBA","names":["data","dataBaseTypeOption","dataBaseSceneOption","getBaseData","getSceneData","dataBaseForm","dataSceneForm","req","page","size","total","mounted","methods","initDataTypeList","dataTpyeList","resp","value","label","getBaseDataInfo","dataForm","getSceneDataInfo","changeBaseData","changeSceneData"],"sourceRoot":"src/views/base","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"data-base\">\n    <el-card style=\"height: 100%;\">\n      <div style=\"height: 50px\">\n        <span>基础数据类型：</span>\n        <el-select v-model=\"dataBaseForm.dataName\" placeholder=\"请选择...\" @change=\"changeBaseData\">\n          <el-option\n            v-for=\"item in dataBaseTypeOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </div>\n      <div class=\"div-line\" style=\"height: 150px\">\n        <el-input\n          v-model=\"getBaseData\"\n          type=\"textarea\"\n          :rows=\"5\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n      <div style=\"height: 50px\">\n        <span>场景数据类型：</span>\n        <el-select v-model=\"dataSceneForm.sceneName\" placeholder=\"请选择...\" @change=\"changeSceneData\">\n          <el-option\n            v-for=\"item in dataBaseSceneOption\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          />\n        </el-select>\n      </div>\n      <div class=\"div-line\" style=\"height: 350px\">\n        <el-input\n          v-model=\"getSceneData\"\n          type=\"textarea\"\n          :rows=\"15\"\n          placeholder=\"生成的数据\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { dataTpyeList, getBaseData, getSceneData } from '@/api/datas'\n\nexport default {\n  data() {\n    return {\n      dataBaseTypeOption: [],\n      dataBaseSceneOption: [],\n      getBaseData: '',\n      getSceneData: '',\n      dataBaseForm: {\n        'dataName': ''\n      },\n      dataSceneForm: {\n        'sceneName': ''\n      },\n      req: {\n        page: 1,\n        size: 6\n      },\n      // 分页页数\n      total: 10\n    }\n  },\n  mounted() {\n    this.initDataTypeList()\n  },\n  methods: {\n    // 初始数据类型列表\n    async initDataTypeList() {\n      const resp = await dataTpyeList(this.req)\n      if (resp.success === true) {\n        for (let i = 0; i < resp.items.length; i++) {\n          if (resp.items[i].data_type === 'base') {\n            this.dataBaseTypeOption.push({\n              value: resp.items[i].data_name,\n              label: resp.items[i].data_ch\n            })\n          } else if (resp.items[i].data_type === 'scene') {\n            this.dataBaseSceneOption.push({\n              value: resp.items[i].data_name,\n              label: resp.items[i].data_ch\n            })\n          }\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    async getBaseDataInfo(dataForm) {\n      const resp = await getBaseData(dataForm)\n      if (resp.success === true) {\n        this.getBaseData = JSON.stringify(resp.result, null, 2)\n      }\n    },\n    async getSceneDataInfo(dataForm) {\n      const resp = await getSceneData(dataForm)\n      if (resp.success === true) {\n        this.getSceneData = JSON.stringify(resp.result, null, 2)\n      }\n    },\n    // 选中选项，生成对应的数据\n    changeBaseData() {\n      this.getBaseDataInfo(this.dataBaseForm)\n    },\n    changeSceneData() {\n      this.getSceneDataInfo(this.dataSceneForm)\n    }\n  }\n}\n</script>\n"]}]}